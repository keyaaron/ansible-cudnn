---
# tasks file for ansible-cudnn

    - name: Check if CUDA is installed
      command: dpkg-query -W cuda
      register: cuda_installed
      failed_when: cuda_installed.rc > 1
      changed_when: cuda_installed.rc == 1
      
    - name: Download CUDA Repo
      get_url:
        url="https://developer.nvidia.com/compute/cuda/8.0/Prod2/local_installers/cuda-repo-ubuntu1604-8-0-local-ga2_8.0.61-1_amd64-deb"
        dest="/tmp/cuda-8-0_8.0.61-1_amd64.deb"
      when: cuda_installed.rc == 1

    - name: Install CUDA Repo
      become: yes
      apt: deb="/tmp/cuda-8-0_8.0.61-1_amd64.deb"
      when: cuda_installed.rc == 1
      
    - name: updates a server
      become: yes
      apt: update_cache=yes
      when: cuda_installed.rc == 1

    - name: Install CUDA
      become: yes
      apt: name=cuda
      when: cuda_installed.rc == 1
      
    - name: register running kernel version
      command: uname -r
      register: running_kernel
      changed_when: false
      
    - name: Install list of packages
      become: yes
      apt: name={{item}} state=installed
      with_items:
        - opencl-headers
        - build-essential
        - protobuf-compiler
        - libprotoc-dev
        - libboost-all-dev
        - libleveldb-dev
        - hdf5-tools
        - libhdf5-serial-dev
        - libopencv-core-dev
        - libopencv-highgui-dev
        - libsnappy-dev
        - libsnappy1v5
        - libatlas-base-dev
        - cmake
        - libstdc++6-4.8-dbg
        - libgoogle-glog0v5
        - libgoogle-glog-dev
        - libgflags-dev
        - liblmdb-dev
        - gfortran
        - "linux-image-extra-{{ running_kernel.stdout }}"
        - "linux-headers-{{ running_kernel.stdout }}"
        - "linux-image-{{ running_kernel.stdout }}"
        - cuda

    - file: path=/tmp/cudnn-8.0-linux-x64-v5.1 state=directory

    - name: Download cuDNN
      get_url:
      args:
        url: http://developer.download.nvidia.com/compute/redist/cudnn/v5.1/cudnn-8.0-linux-x64-v5.1.tgz
        dest: /tmp/cudnn-8.0-linux-x64-v5.1.tgz

    - name: untar cuDNN
      unarchive: src=/tmp/cudnn-8.0-linux-x64-v5.1.tgz dest=/tmp/cudnn-8.0-linux-x64-v5.1 copy=no
    
    - name: Copy cuDNN headers from /tmp/cudnn-8.0-linux-x64-v5.1
      become: yes
      command: "cp /tmp/cudnn-8.0-linux-x64-v5.1/cuda/include/cudnn.h /usr/local/cuda/include"
      args:
        creates: /usr/local/cuda/include/cudnn.h
      
    - name: Copy cuDNN libs from /tmp/cudnn-8.0-linux-x64-v5.1
      become: tes
      shell: "cp /tmp/cudnn-8.0-linux-x64-v5.1/cuda/lib64/libcudnn* /usr/local/cuda/lib64/"
      args:
        creates: /usr/local/cuda/lib64/libcudnn.so.8.0

    - name: Copy cuDNN libs from /tmp/cudnn-8.0-linux-x64-v5.1
      become: yes
      shell: "cp /tmp/cudnn-8.0-linux-x64-v5.1/cuda/lib64/libcudnn* /usr/local/cuda/lib64/"
      args:
        creates: /usr/local/cuda/lib64/libcudnn.so.7.5
      
    - name: Set permissions on cuDNN files
      become: yes
      shell: "chmod a+r /usr/local/cuda/include/cudnn.h /usr/local/cuda/lib64/libcudnn*"
